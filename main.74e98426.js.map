{"version":3,"sources":["scripts/main.js"],"names":["firstPromise","Promise","resolve","reject","document","addEventListener","setTimeout","Error","secondPromise","leftClick","rightClick","thirdPromise","all","then","handler","message","className","notificationElement","createElement","setAttribute","textContent","classList","add","body","append","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCC,SAASC,iBAAiB,QAAS,WACjCH,EAAQ,gCAGVI,WAAW,WACTH,EAAO,IAAII,MAAM,gCAChB,OAGCC,EAAgB,IAAIP,QAAQ,SAACC,EAASC,GAC1CC,SAASC,iBAAiB,QAAS,WACjCH,EAAA,iCAGFE,SAASC,iBAAiB,cAAe,WACvCH,EAAA,mCAIEO,EAAY,IAAIR,QAAQ,SAACC,EAASC,GACtCC,SAASC,iBAAiB,QAAS,WACjCH,QAGEQ,EAAa,IAAIT,QAAQ,SAACC,EAASC,GACvCC,SAASC,iBAAiB,cAAe,WACvCH,QAIES,EAAe,IAAIV,QAAQ,SAACC,EAASC,GACzCF,QAAQW,IAAI,CAACF,EAAYD,IAAYI,KAAK,WACxCX,EAAA,kCAIEY,EAAU,SAACC,GAASC,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,UAC9BC,EAAsBb,SAASc,cAAc,OAEnDD,EAAoBE,aAAa,UAAW,gBAC5CF,EAAoBG,YAAcL,EAClCE,EAAoBI,UAAUC,IAAIN,GAElCZ,SAASmB,KAAKC,OAAOP,IAGvBjB,EAAaa,KAAKC,GAASW,MAAM,SAACC,GAChCZ,EAAQY,EAAMX,QAAS,aAEzBP,EAAcK,KAAKC,GAASW,MAAMX,GAClCH,EAAaE,KAAKC,GAASW,MAAMX","file":"main.74e98426.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve(`Second promise was resolved`);\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve(`Second promise was resolved`);\n  });\n});\n\nconst leftClick = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve();\n  });\n});\nconst rightClick = new Promise((resolve, reject) => {\n  document.addEventListener('contextmenu', () => {\n    resolve();\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  Promise.all([rightClick, leftClick]).then(() => {\n    resolve(`Third promise was resolved`);\n  });\n});\n\nconst handler = (message, className = 'success') => {\n  const notificationElement = document.createElement('div');\n\n  notificationElement.setAttribute('data-qa', 'notification');\n  notificationElement.textContent = message;\n  notificationElement.classList.add(className);\n\n  document.body.append(notificationElement);\n};\n\nfirstPromise.then(handler).catch((error) => {\n  handler(error.message, 'warning');\n});\nsecondPromise.then(handler).catch(handler);\nthirdPromise.then(handler).catch(handler);\n"]}